{"version":3,"sources":["G:/GoWork/src/simplystmicroservice/angular/src/$_gendir lazy","G:/GoWork/src/simplystmicroservice/angular/src/app/app.component.css","G:/GoWork/src/simplystmicroservice/angular/src/app/app.component.html","G:/GoWork/src/simplystmicroservice/angular/src/app/app.component.ts","G:/GoWork/src/simplystmicroservice/angular/src/app/app.module.ts","G:/GoWork/src/simplystmicroservice/angular/src/app/home/home.component.html","G:/GoWork/src/simplystmicroservice/angular/src/app/home/home.component.ts","G:/GoWork/src/simplystmicroservice/angular/src/app/login/login.component.css","G:/GoWork/src/simplystmicroservice/angular/src/app/login/login.component.html","G:/GoWork/src/simplystmicroservice/angular/src/app/login/login.component.ts","G:/GoWork/src/simplystmicroservice/angular/src/app/material.module.ts","G:/GoWork/src/simplystmicroservice/angular/src/app/signup/signup.component.css","G:/GoWork/src/simplystmicroservice/angular/src/app/signup/signup.component.html","G:/GoWork/src/simplystmicroservice/angular/src/app/signup/signup.component.ts","G:/GoWork/src/simplystmicroservice/angular/src/environments/environment.ts","G:/GoWork/src/simplystmicroservice/angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/GoWork/src/simplystmicroservice/angular/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-spacer {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/GoWork/src/simplystmicroservice/angular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!--<mat-checkbox #show [value]=\\\"val\\\" [checked]=\\\"isChecked\\\" (onChange)=\\\"onChange($event)\\\">Check me!</mat-checkbox>\\n<div *ngIf=\\\"show.checked\\\">Show Detailssssss</div>   -->\\n<mat-toolbar  color=\\\"primary\\\" >Simplyst\\n        <span class=\\\"example-spacer\\\"></span>\\n       <!-- <mat-icon class=\\\"example-icon\\\">account_box</mat-icon> <a href=\\\"/signup\\\">Register</a>  -->\\n        <mat-icon class=\\\"example-icon\\\">verified_user</mat-icon>  <a routerLink=\\\"/login\\\">Login</a>\\n       \\n</mat-toolbar>\\n<div><router-outlet></router-outlet></div>\\n\\n<!--\\n\\n<app-signup></app-signup>\\n\\n\\n<app-login></app-login>\\n\\n-->\\n<div ng-app='StarterApp' ng-controller='AppCtrl' layout='column' layout-fill></div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/GoWork/src/simplystmicroservice/angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  isChecked=true\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/GoWork/src/simplystmicroservice/angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n// import { MaterialModule } from '@angular/material';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport 'hammerjs';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AppComponent } from './app.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatCheckboxModule,\n        MatToolbarModule,\n        MatInputModule,\n        MatIconModule,\n        MatCardModule,\n        MatButtonModule,\n        MatListModule,\n        MatTableModule,\n        MatDialogModule} from '@angular/material';\n  // Routing the pages\n const AppRoutes: Routes = [\n          { path: '', component: SignupComponent },\n          { path: 'login' , component: LoginComponent },\n          { path: 'home' , component: HomeComponent},\n      ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n   SignupComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    HttpModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatListModule,\n    MatTableModule,\n    RouterModule,\n    RouterModule.forRoot(AppRoutes),\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/GoWork/src/simplystmicroservice/angular/src/app/app.module.ts","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\n  <div>\\n    <div class=\\\"example-header\\\">\\n      <mat-form-field floatPlaceholder=\\\"never\\\">\\n        <input matInput #filter placeholder=\\\"Filter users\\\">\\n      </mat-form-field>\\n      <button mat-icon-button color=\\\"accent\\\" (click)=\\\"constructor()\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a add icon\\\">add_circle</mat-icon>\\n        </button>\\n    </div>\\n    <div>\\n       \\n           \\n         \\n    </div>\\n  </div>\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\n  \\n      <!--- Note that these columns can be defined in any order.\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\n  \\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"userId\\\">\\n        <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n      </ng-container>\\n  \\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"progress\\\">\\n        <mat-header-cell *matHeaderCellDef> Progress </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </mat-cell>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"userName\\\">\\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </mat-cell>\\n      </ng-container>\\n  \\n      <!-- Color Column -->\\n      <ng-container matColumnDef=\\\"color\\\">\\n        <mat-header-cell *matHeaderCellDef> Color </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.color\\\"> {{row.color}} </mat-cell>\\n      </ng-container>\\n  \\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/GoWork/src/simplystmicroservice/angular/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Http } from '@angular/http';\nimport { NgModel } from '@angular/forms';\n\nimport {DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/observable/fromEvent';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n    displayedColumns = ['userId', 'userName', 'progress', 'color'];\n    exampleDatabase = new ExampleDatabase();\n    dataSource: ExampleDataSource | null;\n  \n    @ViewChild('filter') filter: ElementRef;\n  \n    ngOnInit() {\n      this.dataSource = new ExampleDataSource(this.exampleDatabase);\n      Observable.fromEvent(this.filter.nativeElement, 'keyup')\n          .debounceTime(150)\n          .distinctUntilChanged()\n          .subscribe(() => {\n            if (!this.dataSource) { return; }\n            this.dataSource.filter = this.filter.nativeElement.value;\n          });\n    }\n  }\n  \n  /** Constants used to fill up our data base. */\n  const COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n    'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\n  const NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n    'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n    'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n  \n  export interface UserData {\n    id: string;\n    name: string;\n    progress: string;\n    color: string;\n  }\n  \n  /** An example database that the data source uses to retrieve data for the table. */\n  export class ExampleDatabase {\n    /** Stream that emits whenever the data has been modified. */\n    dataChange: BehaviorSubject<UserData[]> = new BehaviorSubject<UserData[]>([]);\n    get data(): UserData[] { return this.dataChange.value; }\n  \n    constructor() {\n      // Fill up the database with 100 users.\n      for (let i = 0; i < 100; i++) { this.addUser(); }\n    }\n  \n    /** Adds a new user to the database. */\n    addUser() {\n      const copiedData = this.data.slice();\n      copiedData.push(this.createNewUser());\n      this.dataChange.next(copiedData);\n    }\n  \n    /** Builds and returns a new User. */\n    private createNewUser() {\n      const name =\n          NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n          NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n  \n      return {\n        id: (this.data.length + 1).toString(),\n        name: name,\n        progress: Math.round(Math.random() * 100).toString(),\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n      };\n    }\n  }\n  \n  /**\n   * Data source to provide what data should be rendered in the table. Note that the data source\n   * can retrieve its data in any way. In this case, the data source is provided a reference\n   * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n   * the underlying data. Instead, it only needs to take the data and send the table exactly what\n   * should be rendered.\n   */\n  export class ExampleDataSource extends DataSource<any> {\n    _filterChange = new BehaviorSubject('');\n    get filter(): string { return this._filterChange.value; }\n    set filter(filter: string) { this._filterChange.next(filter); }\n  \n    constructor(private _exampleDatabase: ExampleDatabase) {\n      super();\n    }\n  \n    /** Connect function called by the table to retrieve one stream containing the data to render. */\n    connect(): Observable<UserData[]> {\n      const displayDataChanges = [\n        this._exampleDatabase.dataChange,\n        this._filterChange,\n      ];\n  \n      return Observable.merge(...displayDataChanges).map(() => {\n        return this._exampleDatabase.data.slice().filter((item: UserData) => {\n          let searchStr = (item.name + item.color).toLowerCase();\n          return searchStr.indexOf(this.filter.toLowerCase()) != -1;\n        });\n      });\n    }\n  \n    disconnect() {}\n}\n\n\n// WEBPACK FOOTER //\n// G:/GoWork/src/simplystmicroservice/angular/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/GoWork/src/simplystmicroservice/angular/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"\\n<div ng-controller=\\\"formctrl\\\" ng-app=\\\"myApp\\\">\\n  \\n  <mat-card>\\n  <div class=\\\"container\\\">\\n  <div id=\\\"login\\\">\\n      <div class=\\\"signup-screen\\\">\\n          <div class=\\\"mat-card-title mat-color-primary mat-shadow-6dp\\\" >LOGIN</div>\\n          <div class=\\\"divider\\\"></div>\\n        \\n      <mat-card-content>\\n          <form class=\\\"user\\\" method=\\\"post\\\" name=\\\"register\\\" action=\\\"/login\\\" novalidate>\\n\\n            <div class=\\\"input-field col s6\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <span matPrefix></span>\\n                <input name=\\\"Username\\\" matInput placeholder=\\\"User Name\\\" [(ngModel)]=\\\"login.Username\\\">\\n                <mat-icon matSuffix>email</mat-icon>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"input-field col s6\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <span matPrefix></span>\\n                <input name=\\\"password\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\" required [(ngModel)]=\\\"login.password\\\">\\n                <mat-icon matSuffix>https</mat-icon>\\n              </mat-form-field>\\n              </div>\\n\\n\\n\\n\\n           <!--    <div class=\\\"input-field col s6\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                  <span matPrefix></span>\\n                  <input name=\\\"email\\\"  matInput placeholder=\\\"Email\\\" required [(ngModel)]=\\\"user.email\\\">\\n                  <mat-icon matSuffix>https</mat-icon>\\n                </mat-form-field>\\n                </div>\\n             <div>\\n            <mat-card-actions>\\n              <button mat-raised-button>Login</button>\\n              \\n              <button mat-button>Register</button>\\n            </mat-card-actions>\\n          </div> -->\\n            <div class=\\\"mat-card-actions \\\">\\n                <button  mat-raised-button type=\\\"submit\\\" (click)=\\\"logins()\\\">Register</button>\\n                  </div>\\n            </form>\\n          </mat-card-content>\\n          </div>\\n        </div>\\n    </div>\\n  </mat-card> \\n  </div>\\n  \\n  \\n  <!--\\n  <mat-card>\\n      <div class=\\\"mat-card-title mat-color-primary mat-shadow-6dp\\\" >Register</div>\\n      <mat-card-content>\\n          <div class=\\\"input-field col s6\\\">  <input matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"user.fname\\\"><br /> </div>\\n            <div class=\\\"input-field col s6\\\">   <input matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"user.lname\\\"><br /> </div>\\n              <div class=\\\"input-field col s6\\\">  <input matInput  placeholder=\\\"User Name\\\" [(ngModel)]=\\\"user.email\\\"><br /></div>\\n                <div class=\\\"input-field col s6\\\">   <input matInput  placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\"><br /></div>\\n      </mat-card-content>\\n      <mat-card-actions>\\n          <button mat-button (click)=\\\"save()\\\">Register</button>\\n      </mat-card-actions>\\n  </mat-card>\\n  -->\\n<!--\\n<div class=\\\"mat-layout\\\" ng-controller=\\\"formctrl\\\" ng-app=\\\"myApp\\\">\\n<mat-card>\\n\\n        <div class=\\\"mat-card-title mat-color-primary mat-shadow-12dp\\\" >Sign In\\n        <mat-card-content>\\n                <form class=\\\"sup\\\" method=\\\"post\\\" action=\\\"/login\\\" >\\n                        <div class=\\\"input-field col s6\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                              <span matPrefix></span>\\n                              <input name=\\\"Username\\\" matInput placeholder=\\\"User Name\\\" [(ngModel)]=\\\"sup.Username\\\">\\n                              <mat-icon matSuffix>person</mat-icon>\\n                            </mat-form-field>\\n                        </div> \\n                        <div class=\\\"input-field col s6\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                  <span matPrefix></span>\\n                                  <input ng-model=\\\"uname\\\" name=\\\"password\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"sup.password\\\" required>\\n                                  <mat-icon matSuffix>https</mat-icon>\\n                                </mat-form-field>\\n                               </div>\\n                               <div class=\\\"mat-card-actions \\\">\\n                                    <button mat-button><a routerLink=\\\"\\\">Forgot password?</a></button>\\n                                    <button  mat-raised-button type=\\\"submit\\\" (click)=\\\"dial\\\">LOGIN</button>\\n                                     </div>\\n\\n\\n                 </form>\\n\\n\\n\\n\\n        </mat-card-content>\\n\\n    </div>\\n\\n\\n</mat-card>\\n</div>\\n\\n-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/GoWork/src/simplystmicroservice/angular/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Http } from '@angular/http';\nimport { NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  public login: any;\n  title = 'login';\n  public constructor(private location: Location, private http: Http, private router: Router) {\n    this.login = {\n        'Username': '',\n        'password': '',\n    };\n\n}\npublic logins() {\n  if(this.login.Username && this.login.password){\n       console.log('submit Post click happend' + this.login);\n     this.http.post('http://localhost:8080/login', JSON.stringify(this.login))\n     .subscribe(result => {\n\n      console.log('submit Post click happend ' +  JSON.stringify(this.login) );\n      this.router.navigate(['/home']);\n      });\n    \n  \n\n    }\n}\n}\n\n\n// WEBPACK FOOTER //\n// G:/GoWork/src/simplystmicroservice/angular/src/app/login/login.component.ts","import {NgModule} from '@angular/core'\nimport{MatCheckboxModule\n\n} from '@angular/material'\n\n@NgModule({\n    imports:[\n        MatCheckboxModule\n    ],\n    exports:[\n\n    ]\n})\nexport class MaterialModule{}\n\n\n// WEBPACK FOOTER //\n// G:/GoWork/src/simplystmicroservice/angular/src/app/material.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/GoWork/src/simplystmicroservice/angular/src/app/signup/signup.component.css\n// module id = ../../../../../src/app/signup/signup.component.css\n// module chunks = main","module.exports = \"\\n<div ng-controller=\\\"formctrl\\\" ng-app=\\\"myApp\\\">\\n\\n<mat-card>\\n<div class=\\\"container\\\">\\n<div id=\\\"signup\\\">\\n    <div class=\\\"signup-screen\\\">\\n        <div class=\\\"mat-card-title mat-color-primary mat-shadow-6dp\\\" >Register</div>\\n        <div class=\\\"divider\\\"></div>\\n      \\n    <mat-card-content>\\n        <form class=\\\"user\\\" method=\\\"post\\\" name=\\\"register\\\" action=\\\"/register\\\" novalidate>\\n           \\n     <!--     <div class=\\\"input-field col s6\\\">\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <span matPrefix></span>\\n            <input name=\\\"key\\\" matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"user.key\\\">\\n            <mat-icon matSuffix>person</mat-icon>\\n          </mat-form-field>\\n          </div>\\n          <div class=\\\"input-field col s6\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <span matPrefix></span>\\n              <input name=\\\"lname\\\" matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"user.lname\\\">\\n              <mat-icon matSuffix>person</mat-icon>\\n            </mat-form-field>\\n            </div> -->\\n          <div class=\\\"input-field col s6\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <span matPrefix></span>\\n              <input name=\\\"Username\\\" matInput placeholder=\\\"User Name\\\" [(ngModel)]=\\\"user.Username\\\">\\n              <mat-icon matSuffix>email</mat-icon>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"input-field col s6\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <span matPrefix></span>\\n              <input name=\\\"password\\\" type=\\\"password\\\" matInput placeholder=\\\"Password\\\" required [(ngModel)]=\\\"user.password\\\">\\n              <mat-icon matSuffix>https</mat-icon>\\n            </mat-form-field>\\n            </div>\\n         <!--    <div class=\\\"input-field col s6\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <span matPrefix></span>\\n                <input name=\\\"email\\\"  matInput placeholder=\\\"Email\\\" required [(ngModel)]=\\\"user.email\\\">\\n                <mat-icon matSuffix>https</mat-icon>\\n              </mat-form-field>\\n              </div>\\n           <div>\\n          <mat-card-actions>\\n            <button mat-raised-button>Login</button>\\n            \\n            <button mat-button>Register</button>\\n          </mat-card-actions>\\n        </div> -->\\n          <div class=\\\"mat-card-actions \\\">\\n              <button  mat-raised-button type=\\\"submit\\\" (click)=\\\"save()\\\">Register</button>\\n                </div>\\n          </form>\\n        </mat-card-content>\\n        </div>\\n      </div>\\n  </div>\\n</mat-card> \\n</div>\\n\\n\\n<!--\\n<mat-card>\\n    <div class=\\\"mat-card-title mat-color-primary mat-shadow-6dp\\\" >Register</div>\\n    <mat-card-content>\\n        <div class=\\\"input-field col s6\\\">  <input matInput placeholder=\\\"First Name\\\" [(ngModel)]=\\\"user.fname\\\"><br /> </div>\\n          <div class=\\\"input-field col s6\\\">   <input matInput placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"user.lname\\\"><br /> </div>\\n            <div class=\\\"input-field col s6\\\">  <input matInput  placeholder=\\\"User Name\\\" [(ngModel)]=\\\"user.email\\\"><br /></div>\\n              <div class=\\\"input-field col s6\\\">   <input matInput  placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\"><br /></div>\\n    </mat-card-content>\\n    <mat-card-actions>\\n        <button mat-button (click)=\\\"save()\\\">Register</button>\\n    </mat-card-actions>\\n</mat-card>\\n-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/GoWork/src/simplystmicroservice/angular/src/app/signup/signup.component.html\n// module id = ../../../../../src/app/signup/signup.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Http } from '@angular/http';\nimport { NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit  {\n    public user: any;\n   \n    public constructor(private location: Location, private http: Http, private router: Router) {\n        this.user = {\n            \n            'Username': '',\n            'password': '',\n           \n\n        };\n\n    }\n\n    public ngOnInit() { }\n\n    public save() {\n        \n             console.log('submit Post click happend' + this.user);\n           this.http.post('http://localhost:8080/register', JSON.stringify(this.user))\n           .subscribe(result => {\n            console.log('submit Post click happend ' +  JSON.stringify(this.user) );\n                this.router.navigate(['/login']);\n            });\n            \n           \n        \n   \n\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// G:/GoWork/src/simplystmicroservice/angular/src/app/signup/signup.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// G:/GoWork/src/simplystmicroservice/angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// G:/GoWork/src/simplystmicroservice/angular/src/main.ts"],"sourceRoot":"webpack:///"}